import java.sql.*;
import java.util.Scanner;

public class ProductCRUD {
    static final String url = "jdbc:mysql://localhost:3306/testdb";
    static final String user = "root";
    static final String password = "Simran0$";

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        try (Connection con = DriverManager.getConnection(url, user, password)) {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con.setAutoCommit(false); // for transaction handling

            while (true) {
                System.out.println("\n--- Product CRUD Menu ---");
                System.out.println("1. Insert Product");
                System.out.println("2. Display Products");
                System.out.println("3. Update Product");
                System.out.println("4. Delete Product");
                System.out.println("5. Exit");
                System.out.print("Enter choice: ");
                int choice = sc.nextInt();

                switch (choice) {
                    case 1: insertProduct(con, sc); break;
                    case 2: displayProducts(con); break;
                    case 3: updateProduct(con, sc); break;
                    case 4: deleteProduct(con, sc); break;
                    case 5: System.out.println("Exiting..."); return;
                    default: System.out.println("Invalid choice!");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    static void insertProduct(Connection con, Scanner sc) {
        try {
            String sql = "INSERT INTO Product(ProductID, ProductName, Price, Quantity) VALUES(?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(sql);

            System.out.print("Enter Product ID: ");
            int id = sc.nextInt();
            sc.nextLine();
            System.out.print("Enter Product Name: ");
            String name = sc.nextLine();
            System.out.print("Enter Price: ");
            double price = sc.nextDouble();
            System.out.print("Enter Quantity: ");
            int qty = sc.nextInt();

            pst.setInt(1, id);
            pst.setString(2, name);
            pst.setDouble(3, price);
            pst.setInt(4, qty);

            pst.executeUpdate();
            con.commit();
            System.out.println("✅ Product inserted.");
        } catch (Exception e) {
            try { con.rollback(); } catch (SQLException ex) {}
            e.printStackTrace();
        }
    }

    static void displayProducts(Connection con) {
        try {
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM Product");

            System.out.println("\n--- Product Records ---");
            while (rs.next()) {
                System.out.println(rs.getInt("ProductID") + " | " +
                                   rs.getString("ProductName") + " | " +
                                   rs.getDouble("Price") + " | " +
                                   rs.getInt("Quantity"));
            }
        } catch (Exception e) { e.printStackTrace(); }
    }

    static void updateProduct(Connection con, Scanner sc) {
        try {
            String sql = "UPDATE Product SET ProductName=?, Price=?, Quantity=? WHERE ProductID=?";
            PreparedStatement pst = con.prepareStatement(sql);

            System.out.print("Enter Product ID: ");
            int id = sc.nextInt();
            sc.nextLine();
            System.out.print("Enter New Name: ");
            String name = sc.nextLine();
            System.out.print("Enter New Price: ");
            double price = sc.nextDouble();
            System.out.print("Enter New Quantity: ");
            int qty = sc.nextInt();

            pst.setString(1, name);
            pst.setDouble(2, price);
            pst.setInt(3, qty);
            pst.setInt(4, id);

            int rows = pst.executeUpdate();
            if (rows > 0) {
                con.commit();
                System.out.println("✅ Product updated.");
            } else {
                System.out.println("⚠️ Product not found.");
            }
        } catch (Exception e) {
            try { con.rollback(); } catch (SQLException ex) {}
            e.printStackTrace();
        }
    }

    static void deleteProduct(Connection con, Scanner sc) {
        try {
            String sql = "DELETE FROM Product WHERE ProductID=?";
            PreparedStatement pst = con.prepareStatement(sql);

            System.out.print("Enter Product ID: ");
            int id = sc.nextInt();
            pst.setInt(1, id);

            int rows = pst.executeUpdate();
            if (rows > 0) {
                con.commit();
                System.out.println("✅ Product deleted.");
            } else {
                System.out.println("⚠️ Product not found.");
            }
        } catch (Exception e) {
            try { con.rollback(); } catch (SQLException ex) {}
            e.printStackTrace();
        }
    }
}
